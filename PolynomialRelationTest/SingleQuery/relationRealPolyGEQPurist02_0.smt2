(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source "|
Generated by a testsuite for polynomials of the Ultimate framework [1].
This testsuite runs transformations on polynomials and uses an SMT solver
to check that the input and the output are logically equivalent.
These transformations are mainly used by the quantifier elimination 
implemented in Ultimate Eliminator [2] which itself is used by 
the software verifier Ultimate Automizer[3,4,5] to generate state 
assertions from unsatisfiable cores [6].

2020-06-14, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/
[2] https://ultimate.informatik.uni-freiburg.de/eliminator/
[3] https://ultimate.informatik.uni-freiburg.de/automizer/
[4] Matthias Heizmann, Yu-Fang Chen, Daniel Dietsch, Marius Greitschus,
     Jochen Hoenicke, Yong Li, Alexander Nutz, Betim Musa, Christian
     Schilling, Tanja Schindler, Andreas Podelski: Ultimate Automizer
     and the Search for Perfect Interpolants - (Competition Contribution).
     TACAS (2) 2018: 447-451
[5] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013:36-52
[6] Daniel Dietsch, Matthias Heizmann, Betim Musa, Alexander Nutz, Andreas Podelski
    Craig vs. Newton in software model checking. ESEC/SIGSOFT FSE 2017: 487-497
|")
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status "unknown")
(declare-fun x () Real)
(declare-fun y () Real)
(declare-fun z () Real)
(declare-fun u () Real)
(declare-fun ri () Real)
(assert (let ((.cse16 (/ ri u y y y z z))) (let ((.cse11 (< y 0.0)) (.cse12 (< u 0.0)) (.cse8 (<= x .cse16)) (.cse13 (>= x .cse16)) (.cse9 (distinct z 0.0)) (.cse10 (> u 0.0)) (.cse15 (> y 0.0)) (.cse14 (<= ri 0.0))) (let ((.cse1 (and .cse14 (= 0.0 u))) (.cse2 (and .cse13 .cse9 .cse10 .cse15)) (.cse3 (and .cse12 .cse8 .cse9 .cse15)) (.cse4 (and .cse14 (= 0.0 y))) (.cse5 (and .cse14 (= 0.0 z))) (.cse6 (and .cse12 .cse13 .cse9 .cse11)) (.cse7 (and .cse8 .cse9 .cse10 .cse11)) (.cse0 (>= (* x y y y z z u) ri))) (and (or .cse0 .cse1 .cse2 .cse3 .cse4 .cse5 .cse6 .cse7) (or (not (or .cse1 .cse2 .cse3 .cse4 .cse5 .cse6 .cse7)) (not .cse0)))))))
(check-sat)
(exit)
